type TestMat = (
    &'static [usize],
    &'static [usize],
    &'static [usize],
    &'static [f64],
);

const __TEMPLATE: TestMat = (&[], &[], &[], &[]);

const SMALL: TestMat = (
    &[0, 7, 8, 9, 12, 5, 6, 3, 10, 4, 1, 2, 11, 13, 14, 15],
    &[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 18, 20, 21, 22, 23],
    &[
        0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 3, 6, 10, 1, 2, 4, 11, 5, 12, 13, 14, 15,
    ],
    &[
        1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1.0, 1000.0, 1000.0, 1000.0, 1000.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1000.0, 1000.0, 1000.0, 1000.0,
    ],
);

const MEDIUM: TestMat = (
    &[
        20, 26, 108, 101, 22, 14, 25, 59, 72, 66, 21, 123, 8, 69, 99, 120, 24, 75, 42, 117, 58, 85,
        35, 11, 87, 70, 94, 49, 12, 55, 118, 109, 111, 7, 88, 121, 6, 30, 79, 68, 104, 17, 0, 32,
        76, 96, 15, 3, 18, 56, 89, 86, 112, 125, 45, 1, 4, 16, 19, 23, 80, 81, 105, 28, 113, 2, 29,
        31, 71, 33, 34, 36, 37, 38, 40, 43, 44, 46, 107, 47, 48, 50, 51, 13, 52, 57, 61, 62, 5, 64,
        67, 54, 9, 63, 65, 73, 78, 82, 83, 122, 84, 27, 41, 74, 127, 90, 91, 124, 92, 93, 95, 60,
        97, 98, 100, 10, 77, 102, 103, 106, 53, 110, 119, 126, 114, 115, 116, 39,
    ],
    &[
        0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 18, 20, 21, 22, 23, 24, 28, 33, 37, 40, 42, 45, 48,
        50, 51, 54, 56, 62, 66, 68, 74, 75, 78, 82, 86, 88, 93, 98, 105, 113, 120, 123, 126, 130,
        134, 141, 149, 153, 157, 163, 170, 179, 188, 196, 199, 210, 216, 221, 228, 231, 242, 250,
        260, 268, 274, 278, 286, 292, 296, 303, 315, 322, 331, 343, 355, 361, 371, 382, 392, 405,
        420, 428, 436, 448, 456, 467, 480, 483, 493, 505, 516, 523, 534, 541, 551, 557, 569, 584,
        596, 607, 615, 623, 636, 649, 661, 676, 689, 700, 710, 726, 736, 749, 769, 780, 791, 805,
        813, 823, 835, 846, 857, 872, 885, 901, 913, 922, 938,
    ],
    &[
        0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 3, 6, 10, 1, 2, 4, 11, 5, 12, 13, 14, 15, 16, 4, 6, 16,
        17, 2, 3, 9, 16, 18, 0, 1, 14, 19, 4, 19, 20, 8, 21, 4, 16, 22, 12, 16, 23, 5, 24, 25, 16,
        22, 26, 22, 27, 2, 9, 10, 16, 17, 28, 10, 11, 23, 29, 16, 30, 0, 12, 13, 19, 20, 31, 32,
        17, 25, 33, 1, 9, 10, 34, 27, 31, 33, 35, 33, 36, 5, 14, 20, 29, 37, 4, 10, 13, 30, 38, 9,
        19, 29, 30, 31, 38, 39, 3, 4, 8, 15, 20, 27, 33, 40, 4, 18, 26, 30, 36, 37, 41, 14, 28, 42,
        22, 28, 43, 5, 26, 33, 44, 15, 27, 28, 45, 12, 13, 14, 17, 23, 33, 46, 0, 4, 10, 21, 25,
        32, 35, 47, 22, 39, 46, 48, 12, 39, 43, 49, 4, 17, 30, 45, 48, 50, 0, 9, 20, 21, 35, 49,
        51, 2, 23, 26, 27, 29, 33, 43, 48, 52, 10, 14, 18, 19, 22, 26, 37, 44, 53, 17, 18, 31, 33,
        34, 44, 47, 54, 1, 37, 55, 3, 5, 23, 31, 34, 44, 45, 47, 51, 54, 56, 7, 23, 25, 43, 55, 57,
        35, 39, 47, 53, 58, 9, 10, 14, 23, 25, 43, 59, 4, 12, 60, 4, 5, 12, 13, 30, 36, 37, 42, 47,
        60, 61, 9, 20, 21, 28, 42, 46, 50, 62, 0, 6, 8, 11, 47, 50, 54, 55, 59, 63, 10, 11, 19, 23,
        33, 55, 56, 64, 34, 40, 41, 53, 59, 65, 34, 39, 40, 66, 8, 12, 18, 23, 40, 48, 63, 67, 19,
        36, 48, 53, 64, 68, 2, 23, 24, 69, 5, 11, 27, 47, 48, 65, 70, 1, 2, 3, 6, 13, 18, 32, 41,
        52, 68, 69, 71, 8, 28, 31, 36, 57, 66, 72, 0, 12, 22, 40, 52, 61, 66, 71, 73, 6, 8, 15, 23,
        26, 36, 42, 44, 61, 66, 70, 74, 2, 37, 39, 41, 48, 51, 54, 64, 66, 69, 72, 75, 15, 41, 50,
        51, 56, 76, 0, 21, 22, 31, 38, 42, 45, 74, 75, 77, 0, 11, 20, 24, 35, 37, 52, 56, 63, 66,
        78, 4, 6, 9, 13, 16, 30, 50, 60, 67, 79, 10, 16, 19, 39, 46, 62, 66, 73, 74, 75, 77, 79,
        80, 10, 13, 14, 16, 17, 29, 47, 50, 56, 61, 72, 78, 79, 80, 81, 0, 15, 27, 30, 33, 34, 57,
        82, 12, 23, 26, 40, 41, 72, 80, 83, 1, 35, 36, 50, 52, 55, 65, 70, 71, 73, 76, 84, 1, 35,
        37, 38, 43, 45, 67, 85, 1, 16, 31, 33, 46, 52, 73, 74, 77, 82, 86, 4, 9, 11, 23, 38, 41,
        43, 48, 53, 70, 71, 74, 87, 7, 83, 88, 2, 4, 13, 19, 27, 29, 38, 60, 86, 89, 8, 17, 31, 34,
        40, 50, 51, 58, 78, 81, 86, 90, 3, 5, 18, 38, 40, 43, 45, 55, 63, 84, 91, 22, 25, 51, 59,
        64, 69, 92, 1, 6, 7, 10, 20, 74, 77, 81, 88, 91, 93, 33, 38, 46, 71, 83, 92, 94, 0, 4, 21,
        31, 32, 55, 71, 78, 89, 95, 10, 15, 56, 60, 80, 96, 0, 6, 9, 24, 36, 48, 52, 54, 63, 86,
        93, 97, 7, 14, 20, 22, 43, 49, 57, 59, 62, 66, 70, 71, 81, 93, 98, 10, 19, 23, 24, 28, 34,
        41, 54, 60, 64, 78, 99, 4, 22, 34, 42, 48, 51, 55, 63, 91, 94, 100, 1, 36, 45, 53, 82, 90,
        100, 101, 26, 30, 52, 57, 59, 73, 99, 102, 3, 16, 32, 43, 45, 48, 57, 60, 63, 77, 87, 101,
        103, 2, 17, 19, 27, 28, 44, 52, 68, 81, 91, 92, 102, 104, 0, 5, 10, 16, 17, 36, 50, 56, 75,
        89, 93, 105, 5, 20, 31, 39, 48, 51, 60, 64, 80, 84, 86, 87, 100, 102, 106, 4, 11, 17, 18,
        52, 53, 72, 73, 88, 89, 99, 105, 107, 10, 13, 22, 27, 38, 41, 51, 61, 82, 101, 108, 12, 19,
        53, 54, 55, 91, 92, 93, 106, 109, 11, 12, 14, 22, 31, 34, 41, 50, 51, 59, 61, 64, 70, 100,
        106, 110, 4, 19, 34, 44, 62, 73, 83, 95, 98, 111, 28, 29, 40, 41, 47, 63, 67, 73, 89, 96,
        97, 105, 112, 1, 5, 6, 9, 13, 18, 29, 32, 34, 36, 42, 51, 58, 70, 79, 89, 100, 102, 106,
        113, 10, 16, 42, 45, 60, 64, 71, 95, 104, 110, 114, 7, 19, 30, 36, 58, 66, 79, 86, 90, 109,
        115, 17, 19, 44, 49, 56, 67, 68, 79, 85, 86, 94, 106, 114, 116, 40, 54, 58, 62, 70, 100,
        110, 117, 9, 16, 45, 61, 65, 91, 97, 106, 109, 118, 10, 16, 23, 34, 60, 69, 88, 91, 96,
        106, 110, 119, 19, 24, 31, 34, 60, 62, 65, 81, 110, 114, 120, 36, 40, 43, 47, 48, 50, 82,
        88, 114, 115, 121, 6, 12, 13, 29, 35, 36, 39, 55, 58, 78, 96, 98, 107, 114, 122, 2, 21, 27,
        29, 37, 42, 57, 67, 95, 105, 114, 119, 123, 15, 31, 42, 43, 46, 48, 56, 77, 78, 84, 94, 96,
        97, 101, 109, 124, 30, 62, 63, 71, 77, 79, 96, 98, 106, 107, 110, 125, 4, 42, 51, 68, 76,
        80, 90, 121, 126, 0, 3, 14, 22, 24, 28, 31, 34, 52, 53, 77, 87, 89, 92, 124, 127,
    ],
    &[
        1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1.0, 1000.0, 1000.0, 1000.0, 1000.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1000.0, 1.0,
        1000.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1000.0, 1.0, 1000.0, 1000.0, 1.0, 1.0, 1000.0, 1.0,
        1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1000.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1000.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1000.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1000.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1000.0,
    ],
);

#[allow(dead_code)]
const ALL: &[(&str, TestMat)] = &[("small", SMALL), ("medium", MEDIUM)];
